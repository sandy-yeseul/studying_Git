0. initialize repository to the git: git git init
1. create file: nano
2. check the status: git status
 - showing worktree
3. add untracked file to the working stage: git add filename
	git add . : adding all file that's in current directory
	git add foldername: adding all file inside the folder
4. check status: git status
5. commit to git: git commit -m "Message"
 -m meaning easier to type message only(don't know how to get out from the editing page)
	commiting all: git commit -am "Message"
	warning: if there's untracke file, it can't be commited.
	at least it should be added once
6. finished. check status if anything missing: git status
7. showing log in git: git log
* going back to previous commit: git reset --hard
* showing the difference between git commited file and workingtree file:
	git diff
* showing all the log details: git log -p (p meaning patch)
* go back to the previous commit in the repository: git checkout "id"
	id is the git commit's id
	than you can get the previous commit version in repository as well
	it's not deleting it's going back 
* go to the most recent version(commit): git checkout master
* cp ../b/*.patch . : copy(cp) all(.) the file that finishes like patch(*.patch)

8. connecting to remote repositroy 
	: git remote add origin https://github.com/sandy-yeseul/studying_Git.git
	checking if it connected well: git remote
	checking with the showing address: git remote -v
9. push to the remote repository
	: git push 
	then it shows kinda error that at first we need to initialize
	 git push --set-upstream origin master(need to be done at first)
	or you can just : git push -u origin master
	later just git push 
10. clone: git clone  https://github.com/sandy-yeseul/studying_Git.git
	git clone + address
11. pull: git pull

**how to collaborate: 
	pull -> commit -> push
	fetch -> git merge FETCH_HEAD -> commit -> push
12. fetch: git fetch -> git status -> git merge origin/master(or git merge FETCH_HEAD)
13. patch: how to contribute to open source work
	git format-patch the_latest_version_till_you_made_change: make a file of the differences
13-1. merging patches:
	git am -3 -i *.patch: am(apply mailbox) -3(3 way merging) -i(interactive: asking all the time) *.patch(all the patch files)
